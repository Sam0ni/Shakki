import unittest
from pelilauta import Pelilauta


class TestTorni(unittest.TestCase):

    def setUp(self):
        self.ruudun_koko = 125
        self.maxDiff = None

    def test_torni_liikkeet_oikein_1(self):
        lauta = [[8,0,0,0,0,0,0,2],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [2,0,0,0,0,0,0,8]]
        pelilauta = Pelilauta(lauta, self.ruudun_koko)

        tiedetyt_liikkeet = [
            ((2, 0, 7), (2, 1, 7)),
            ((2, 0, 7), (2, 2, 7)),
            ((2, 0, 7), (2, 3, 7)),
            ((2, 0, 7), (2, 4, 7)),
            ((2, 0, 7), (2, 5, 7)),
            ((2, 0, 7), (2, 6, 7)),
            ((2, 0, 7), (2, 7, 7)),
            ((2, 0, 7), (2, 0, 6)),
            ((2, 0, 7), (2, 0, 5)),
            ((2, 0, 7), (2, 0, 4)),
            ((2, 0, 7), (2, 0, 3)),
            ((2, 0, 7), (2, 0, 2)),
            ((2, 0, 7), (2, 0, 1)),
            ((2, 0, 7), (2, 0, 0)),
            ((2, 7, 0), (2, 7, 1)),
            ((2, 7, 0), (2, 7, 2)),
            ((2, 7, 0), (2, 7, 3)),
            ((2, 7, 0), (2, 7, 4)),
            ((2, 7, 0), (2, 7, 5)),
            ((2, 7, 0), (2, 7, 6)),
            ((2, 7, 0), (2, 7, 7)),
            ((2, 7, 0), (2, 6, 0)),
            ((2, 7, 0), (2, 5, 0)),
            ((2, 7, 0), (2, 4, 0)),
            ((2, 7, 0), (2, 3, 0)),
            ((2, 7, 0), (2, 2, 0)),
            ((2, 7, 0), (2, 1, 0)),
            ((2, 7, 0), (2, 0, 0)),
            ((8, 0, 0), (8, 0, 1)),
            ((8, 0, 0), (8, 0, 2)),
            ((8, 0, 0), (8, 0, 3)),
            ((8, 0, 0), (8, 0, 4)),
            ((8, 0, 0), (8, 0, 5)),
            ((8, 0, 0), (8, 0, 6)),
            ((8, 0, 0), (8, 0, 7)),
            ((8, 0, 0), (8, 1, 0)),
            ((8, 0, 0), (8, 2, 0)),
            ((8, 0, 0), (8, 3, 0)),
            ((8, 0, 0), (8, 4, 0)),
            ((8, 0, 0), (8, 5, 0)),
            ((8, 0, 0), (8, 6, 0)),
            ((8, 0, 0), (8, 7, 0)),
            ((8, 7, 7), (8, 7, 6)),
            ((8, 7, 7), (8, 7, 5)),
            ((8, 7, 7), (8, 7, 4)),
            ((8, 7, 7), (8, 7, 3)),
            ((8, 7, 7), (8, 7, 2)),
            ((8, 7, 7), (8, 7, 1)),
            ((8, 7, 7), (8, 7, 0)),
            ((8, 7, 7), (8, 6, 7)),
            ((8, 7, 7), (8, 5, 7)),
            ((8, 7, 7), (8, 4, 7)),
            ((8, 7, 7), (8, 3, 7)),
            ((8, 7, 7), (8, 2, 7)),
            ((8, 7, 7), (8, 1, 7)),
            ((8, 7, 7), (8, 0, 7)),
        ]
        tiedetyt_blokit = [
        ]

        mahdolliset_liikkeet = []
        mahdolliset_blokit = []

        uudet_liikkeet, uudet_edessa, valkoinen_shakissa, musta_shakissa, valkoisen_shakkaajat, mustan_shakkaajat = pelilauta.alusta()
        mahdolliset_liikkeet = mahdolliset_liikkeet + uudet_liikkeet
        mahdolliset_blokit = mahdolliset_blokit + uudet_edessa
        
        self.assertCountEqual(mahdolliset_liikkeet, tiedetyt_liikkeet)
        self.assertCountEqual(mahdolliset_blokit, tiedetyt_blokit)

    def test_torni_liikkeet_oikein_2(self):
        lauta = [[2,0,0,0,0,0,0,2],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [2,0,0,0,0,0,0,2]]
        pelilauta = Pelilauta(lauta, self.ruudun_koko)

        tiedetyt_liikkeet = [
            ((2, 0, 7), (2, 1, 7)),
            ((2, 0, 7), (2, 2, 7)),
            ((2, 0, 7), (2, 3, 7)),
            ((2, 0, 7), (2, 4, 7)),
            ((2, 0, 7), (2, 5, 7)),
            ((2, 0, 7), (2, 6, 7)),
            ((2, 0, 7), (2, 0, 6)),
            ((2, 0, 7), (2, 0, 5)),
            ((2, 0, 7), (2, 0, 4)),
            ((2, 0, 7), (2, 0, 3)),
            ((2, 0, 7), (2, 0, 2)),
            ((2, 0, 7), (2, 0, 1)),
            ((2, 7, 0), (2, 7, 1)),
            ((2, 7, 0), (2, 7, 2)),
            ((2, 7, 0), (2, 7, 3)),
            ((2, 7, 0), (2, 7, 4)),
            ((2, 7, 0), (2, 7, 5)),
            ((2, 7, 0), (2, 7, 6)),
            ((2, 7, 0), (2, 6, 0)),
            ((2, 7, 0), (2, 5, 0)),
            ((2, 7, 0), (2, 4, 0)),
            ((2, 7, 0), (2, 3, 0)),
            ((2, 7, 0), (2, 2, 0)),
            ((2, 7, 0), (2, 1, 0)),
            ((2, 0, 0), (2, 0, 1)),
            ((2, 0, 0), (2, 0, 2)),
            ((2, 0, 0), (2, 0, 3)),
            ((2, 0, 0), (2, 0, 4)),
            ((2, 0, 0), (2, 0, 5)),
            ((2, 0, 0), (2, 0, 6)),
            ((2, 0, 0), (2, 1, 0)),
            ((2, 0, 0), (2, 2, 0)),
            ((2, 0, 0), (2, 3, 0)),
            ((2, 0, 0), (2, 4, 0)),
            ((2, 0, 0), (2, 5, 0)),
            ((2, 0, 0), (2, 6, 0)),
            ((2, 7, 7), (2, 7, 6)),
            ((2, 7, 7), (2, 7, 5)),
            ((2, 7, 7), (2, 7, 4)),
            ((2, 7, 7), (2, 7, 3)),
            ((2, 7, 7), (2, 7, 2)),
            ((2, 7, 7), (2, 7, 1)),
            ((2, 7, 7), (2, 6, 7)),
            ((2, 7, 7), (2, 5, 7)),
            ((2, 7, 7), (2, 4, 7)),
            ((2, 7, 7), (2, 3, 7)),
            ((2, 7, 7), (2, 2, 7)),
            ((2, 7, 7), (2, 1, 7)),
        ]
        tiedetyt_blokit = [
            ((2, 0, 7), (7, 7)),
            ((2, 0, 7), (0, 0)),
            ((2, 7, 0), (7, 7)),
            ((2, 7, 0), (0, 0)),
            ((2, 0, 0), (0, 7)),
            ((2, 0, 0), (7, 0)),
            ((2, 7, 7), (7, 0)),
            ((2, 7, 7), (0, 7))
        ]

        mahdolliset_liikkeet = []
        mahdolliset_blokit = []

        uudet_liikkeet, uudet_edessa, valkoinen_shakissa, musta_shakissa, valkoisen_shakkaajat, mustan_shakkaajat = pelilauta.alusta()
        mahdolliset_liikkeet = mahdolliset_liikkeet + uudet_liikkeet
        mahdolliset_blokit = mahdolliset_blokit + uudet_edessa
        
        self.assertCountEqual(mahdolliset_liikkeet, tiedetyt_liikkeet)
        self.assertCountEqual(mahdolliset_blokit, tiedetyt_blokit)

    def test_torni_liikkeet_oikein_3(self):
        lauta = [[8,0,0,0,0,0,0,8],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [8,0,0,0,0,0,0,8]]
        pelilauta = Pelilauta(lauta, self.ruudun_koko)

        tiedetyt_liikkeet = [
            ((8, 0, 7), (8, 1, 7)),
            ((8, 0, 7), (8, 2, 7)),
            ((8, 0, 7), (8, 3, 7)),
            ((8, 0, 7), (8, 4, 7)),
            ((8, 0, 7), (8, 5, 7)),
            ((8, 0, 7), (8, 6, 7)),
            ((8, 0, 7), (8, 0, 6)),
            ((8, 0, 7), (8, 0, 5)),
            ((8, 0, 7), (8, 0, 4)),
            ((8, 0, 7), (8, 0, 3)),
            ((8, 0, 7), (8, 0, 2)),
            ((8, 0, 7), (8, 0, 1)),
            ((8, 7, 0), (8, 7, 1)),
            ((8, 7, 0), (8, 7, 2)),
            ((8, 7, 0), (8, 7, 3)),
            ((8, 7, 0), (8, 7, 4)),
            ((8, 7, 0), (8, 7, 5)),
            ((8, 7, 0), (8, 7, 6)),
            ((8, 7, 0), (8, 6, 0)),
            ((8, 7, 0), (8, 5, 0)),
            ((8, 7, 0), (8, 4, 0)),
            ((8, 7, 0), (8, 3, 0)),
            ((8, 7, 0), (8, 2, 0)),
            ((8, 7, 0), (8, 1, 0)),
            ((8, 0, 0), (8, 0, 1)),
            ((8, 0, 0), (8, 0, 2)),
            ((8, 0, 0), (8, 0, 3)),
            ((8, 0, 0), (8, 0, 4)),
            ((8, 0, 0), (8, 0, 5)),
            ((8, 0, 0), (8, 0, 6)),
            ((8, 0, 0), (8, 1, 0)),
            ((8, 0, 0), (8, 2, 0)),
            ((8, 0, 0), (8, 3, 0)),
            ((8, 0, 0), (8, 4, 0)),
            ((8, 0, 0), (8, 5, 0)),
            ((8, 0, 0), (8, 6, 0)),
            ((8, 7, 7), (8, 7, 6)),
            ((8, 7, 7), (8, 7, 5)),
            ((8, 7, 7), (8, 7, 4)),
            ((8, 7, 7), (8, 7, 3)),
            ((8, 7, 7), (8, 7, 2)),
            ((8, 7, 7), (8, 7, 1)),
            ((8, 7, 7), (8, 6, 7)),
            ((8, 7, 7), (8, 5, 7)),
            ((8, 7, 7), (8, 4, 7)),
            ((8, 7, 7), (8, 3, 7)),
            ((8, 7, 7), (8, 2, 7)),
            ((8, 7, 7), (8, 1, 7)),
        ]
        tiedetyt_blokit = [
            ((8, 0, 7), (7, 7)),
            ((8, 0, 7), (0, 0)),
            ((8, 7, 0), (7, 7)),
            ((8, 7, 0), (0, 0)),
            ((8, 0, 0), (0, 7)),
            ((8, 0, 0), (7, 0)),
            ((8, 7, 7), (7, 0)),
            ((8, 7, 7), (0, 7))
        ]

        mahdolliset_liikkeet = []
        mahdolliset_blokit = []

        uudet_liikkeet, uudet_edessa, valkoinen_shakissa, musta_shakissa, valkoisen_shakkaajat, mustan_shakkaajat = pelilauta.alusta()
        mahdolliset_liikkeet = mahdolliset_liikkeet + uudet_liikkeet
        mahdolliset_blokit = mahdolliset_blokit + uudet_edessa
        
        self.assertCountEqual(mahdolliset_liikkeet, tiedetyt_liikkeet)
        self.assertCountEqual(mahdolliset_blokit, tiedetyt_blokit)
